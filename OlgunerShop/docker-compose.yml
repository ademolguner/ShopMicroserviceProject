version: '3.4'

services:
  shop.apigateway.api:
    image: ${DOCKER_REGISTRY-}shopapigatewayapi
    build:
      context: .
      dockerfile: Shop.ApiGateway.Api/Dockerfile
    ports:
      - 5000:5000

  shop.productservice.api:
    image: ${DOCKER_REGISTRY-}shopproductserviceapi
    build:
      context: .
      dockerfile: Shop.ProductService.Api/Dockerfile
    ports:
      - 5001:5001


  shop.basketservice.api:
    image: ${DOCKER_REGISTRY-}shopbasketserviceapi
    build:
      context: .
      dockerfile: Shop.BasketService.Api/Dockerfile
    ports:
      - 5002:5002

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - 5672:5672
      - 15672:15672

  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_data:/mongo'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8082
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      
volumes:
  mongodb_data:
    driver: local
  
